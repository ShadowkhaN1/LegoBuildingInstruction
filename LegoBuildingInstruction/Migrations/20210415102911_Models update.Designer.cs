// <auto-generated />
using LegoBuildingInstruction.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LegoBuildingInstruction.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20210415102911_Models update")]
    partial class Modelsupdate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LegoBuildingInstruction.Models.BuildingInstruction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<int>("DifficultyLevelId")
                        .HasColumnType("int");

                    b.Property<string>("ImageThumbnailUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LongDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumberOfPeopleRating")
                        .HasColumnType("int");

                    b.Property<int>("Pages")
                        .HasColumnType("int");

                    b.Property<string>("PdfInstructionUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ProgramUrl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Rating")
                        .HasColumnType("real");

                    b.Property<string>("Set")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ShortDescription")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("VideoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("DifficultyLevelId");

                    b.ToTable("BuildingInstructions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            DifficultyLevelId = 2,
                            ImageThumbnailUrl = "~/Images/LifterSmall.png",
                            ImageUrl = "~/Images/Lifter.png",
                            LongDescription = "Robot picking up items. The robot detects the object itself using the color sensor.",
                            Name = "Lifter",
                            NumberOfPeopleRating = 2,
                            Pages = 52,
                            Rating = 4.5f,
                            Set = "45544 + 45560",
                            ShortDescription = "Pick up objects!",
                            VideoUrl = "~/Video/LifterVideo.mp4"
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 1,
                            DifficultyLevelId = 1,
                            ImageThumbnailUrl = "~/Images/ColorSegregationSmall.png",
                            ImageUrl = "~/Images/ColorSegregation.png",
                            LongDescription = "Robot picking up items. The robot detects the object itself using the color sensor.",
                            Name = "Color Segregation",
                            NumberOfPeopleRating = 3,
                            Pages = 24,
                            Rating = 5f,
                            Set = "45544",
                            ShortDescription = "Pick up objects!",
                            VideoUrl = "~/Video/ColorSegregationVideo.mp4"
                        });
                });

            modelBuilder.Entity("LegoBuildingInstruction.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            CategoryId = 1,
                            CategoryName = "Mindstorms"
                        },
                        new
                        {
                            CategoryId = 2,
                            CategoryName = "WeDo"
                        },
                        new
                        {
                            CategoryId = 3,
                            CategoryName = "Power Function"
                        });
                });

            modelBuilder.Entity("LegoBuildingInstruction.Models.DifficultyLevel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("DifficultyLevels");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "Easy"
                        },
                        new
                        {
                            Id = 2,
                            Name = "Normal"
                        },
                        new
                        {
                            Id = 3,
                            Name = "Hard"
                        });
                });

            modelBuilder.Entity("LegoBuildingInstruction.Models.BuildingInstruction", b =>
                {
                    b.HasOne("LegoBuildingInstruction.Models.Category", "Category")
                        .WithMany("BuilidingInstructions")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LegoBuildingInstruction.Models.DifficultyLevel", "DifficultyLevel")
                        .WithMany("BuildingInstructions")
                        .HasForeignKey("DifficultyLevelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("DifficultyLevel");
                });

            modelBuilder.Entity("LegoBuildingInstruction.Models.Category", b =>
                {
                    b.Navigation("BuilidingInstructions");
                });

            modelBuilder.Entity("LegoBuildingInstruction.Models.DifficultyLevel", b =>
                {
                    b.Navigation("BuildingInstructions");
                });
#pragma warning restore 612, 618
        }
    }
}
